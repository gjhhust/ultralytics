# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# Hyper-YOLO object detection model with N3-N5 outputs. 

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=hyper-yolon.yaml' will call hyper-yolo.yaml with scale 'n'
  # [depth, width, max_channels, threshold]
  # n: [0.33, 0.25, 1024, 6]
  s: [0.33, 0.50, 1024, 8]
  # m: [0.67, 0.75, 768, 10]
  # l: [1.00, 1.00, 512, 10]
  # x: [1.00, 1.25, 512, 12]

# Hyper-YOLO backbone
backbone:
  - [-1, 1, InputData, [3,[128, 256, 512]]]  # input data dim
  - [0, 1, List_Split, [1]] # added data                      
  - [0, 1, List_Split, [0]] # img      

  - [-1, 1, Conv, [64, 3, 2]]  # 0-B1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1
  - [-1, 3, MANet, [128, True, 2, 3]] # 2-B2/4
  - [-1, 1, Conv, [256, 3, 2]]  # 3
  - [-1, 6, MANetDCN, [256, True, 2, 5]] # 4-B3/8
  - [-1, 1, Conv, [512, 3, 2]]  # 5
  - [-1, 6, MANetDCN, [512, True, 2, 5]] # 6-B4/16
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, MANetDCN, [1024, True, 2, 3]] # 8
  - [-1, 1, SPPF, [1024, 5]]  # 12-B5/32

# Hyper-YOLO head
head:
  # Semantic Collecting
  - [3, 1, nn.AvgPool2d, [8, 8, 0]] # 13
  - [5, 1, nn.AvgPool2d, [4, 4, 0]] # 14
  - [7, 1, nn.AvgPool2d, [2, 2, 0]] # 15
  - [11, 1, DySample, [2]] # 13
  - [[13, 14, 15, 9, 16], 1, Concat, [1]]  # cat 17

  # Hypergraph Computation
  - [-1, 1, Conv, [512, 1, 1]] # 15
  - [-1, 1, HyperComputeModule, [512]] # 16
  - [-1, 3, MANet, [512, True, 2, 3]] # 17

  # Semantic Collecting
  - [-1, 1, nn.AvgPool2d, [2, 2, 0]] # 18
  - [[-1, 11], 1, Concat, [1]]  # cat 19
  - [-1, 1, Conv, [1024, 1, 1]] # 20 P5

  - [[20, 9], 1, Concat, [1]]  # cat 21
  - [-1, 3, MANet, [512, False, 2, 3]]  # 22 P4

  - [20, 1, DySample, [2]] # 13
  - [[-1, 7], 1, Concat, [1]]  # cat 24
  - [-1, 3, MANet, [256, False, 2, 3]]  # 25 P3/N3

  - [-1, 1, Conv, [256, 3, 2]] # 26
  - [[-1, 25], 1, Concat, [1]]  # 27 cat 
  - [-1, 3, MANet, [512, False, 2, 3]]  # 28 N4

  - [-1, 1, Conv, [512, 3, 2]] # 29
  - [[-1, 23], 1, Concat, [1]]  # 30 cat
  - [-1, 3, C2f, [1024, False]]  # 31 N5

  - [[28, 31, 34], 1, Detect, [nc]]  # Detect(N3, N4, N5)
